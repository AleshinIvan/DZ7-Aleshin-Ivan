#1
1) Отношение типа is-a (есть, является), при котором один класс есть подвидом другого класса. 
При таком отношении один класс расширяет (детализирует) возможности другого класса. 
Расширение возможностей класса осуществляется благодаря использованию наследования.
2) Отношение, при котором существует взаимосвязь между двумя классами. Здесь выделяют два подвида взаимосвязи между классами:
	2.1) Отношение типа has-a (класс содержит другой класс). В этом случае в классе объявляется одних или несколько 
	экземпляров другого класса. При данном отношении возможны два случая взаимодействия. Первый случай, 
	это когда объект (экземпляр), который объявлен в классе, не является составной частью класса (агрегация) 
	и его использование не влияет на функциональную работу класса. Второй случай, когда объект, который объявлен в классе, 
	есть составной частью этого класса (композиция).
	2.2) Отношение типа uses (класс «использует другой класс). В этом случае класс содержит программный код другого 
	вложенного класса, к которому он имеет доступ. Более подробно об особенностях использования отношения типа uses описывается здесь.

#2
1) публичный (public)- публичные (public) и защищенные (protected) данные наследуются без изменения уровня доступа к ним;
2) защищенный (protected) — все унаследованные данные становятся защищенными;
3) приватный (private) — все унаследованные данные становятся приватными.

#3
vtable - указатель в начале класса на каую-то область памяти, где лежат указатели на методы.

#4
Виртуальное наследование позволяет не хранить одну и ту же память несколько раз.

#5
1) Порождающие паттерны, предназначенные для создания новых объектов в системе.
2) Структурные паттерны, решающие задачи компоновки системы на основе классов и объектов.
3) Паттерны поведения, предназначенные для распределения обязанностей между объектами в системе.